{
  "address": "0x1494da7B8e33C25CDF0d380b3374a3054C644EF8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "interval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AutomatedPayment__CannotPerformUpkeep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AutomatedPayment__NotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AutomatedPayment__OnlyOwnerAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "employee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salary",
          "type": "uint256"
        }
      ],
      "name": "addEmployee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upKeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "coorespondingFunderAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "employee",
          "type": "address"
        }
      ],
      "name": "deleteEmployee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "employees",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "employee",
          "type": "address"
        }
      ],
      "name": "getEmployeeSalary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmployees",
      "outputs": [
        {
          "internalType": "address payable[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "employee",
          "type": "address"
        }
      ],
      "name": "isEmployee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "employee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salary",
          "type": "uint256"
        }
      ],
      "name": "updateEmployeeSalary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x73b905111b0656c7c33305ecd4d2b5b92341b2b038cdfc283623375a9d8cee11",
  "receipt": {
    "to": null,
    "from": "0x11a626e808427091147eF35C1790557453Bdf79F",
    "contractAddress": "0x1494da7B8e33C25CDF0d380b3374a3054C644EF8",
    "transactionIndex": 14,
    "gasUsed": "1421358",
    "logsBloom": "0x
    "blockHash": "0x50ee9aaf69adc8433f48ffec1ad73bd4ab55d0f90f528d81d05cffecbcbc7926",
    "transactionHash": "0x73b905111b0656c7c33305ecd4d2b5b92341b2b038cdfc283623375a9d8cee11",
    "logs": [],
    "blockNumber": 11040763,
    "cumulativeGasUsed": "11653491",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x11a626e808427091147eF35C1790557453Bdf79F",
    30
  ],
  "numDeployments": 2,
  "solcInputHash": "88d6aee63899d3177e4366764f590049",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AutomatedPayment__CannotPerformUpkeep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AutomatedPayment__NotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AutomatedPayment__OnlyOwnerAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salary\",\"type\":\"uint256\"}],\"name\":\"addEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upKeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coorespondingFunderAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"}],\"name\":\"deleteEmployee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"employees\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"}],\"name\":\"getEmployeeSalary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmployees\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"}],\"name\":\"isEmployee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"employee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salary\",\"type\":\"uint256\"}],\"name\":\"updateEmployeeSalary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SplitPayment.sol\":\"AutomatedPayment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"contracts/SplitPayment.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\nerror AutomatedPayment__NotFound();\\r\\nerror AutomatedPayment__OnlyOwnerAllowed();\\r\\nerror AutomatedPayment__NotEnoughFunds();\\r\\nerror AutomatedPayment__NotEnoughTimePassed();\\r\\nerror AutomatedPayment__CannotPerformUpkeep();\\r\\n\\r\\ncontract AutomatedPayment is KeeperCompatibleInterface {\\r\\n    uint256 public immutable i_interval;\\r\\n    uint256 public startTime;\\r\\n    address public immutable i_owner;\\r\\n    address payable[] public employees;\\r\\n    address[] public funders;\\r\\n\\r\\n    mapping(address => uint256) coorespondingEmployeeSalary;\\r\\n    mapping(address => uint256) public coorespondingFunderAmount;\\r\\n\\r\\n    constructor(address owner, uint256 interval) {\\r\\n        i_owner = owner;\\r\\n        i_interval = interval;\\r\\n        startTime = block.timestamp;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        funders.push(msg.sender);\\r\\n        coorespondingFunderAmount[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    function addEmployee(address payable employee, uint256 salary)\\r\\n        public\\r\\n        onlyOwner\\r\\n    {\\r\\n        employees.push(employee);\\r\\n        coorespondingEmployeeSalary[employee] = salary;\\r\\n    }\\r\\n\\r\\n    function updateEmployeeSalary(address employee, uint256 salary)\\r\\n        public\\r\\n        onlyOwner\\r\\n    {\\r\\n        uint256 index = isEmployee(employee);\\r\\n        coorespondingEmployeeSalary[employee] = salary;\\r\\n    }\\r\\n\\r\\n    function deleteEmployee(address employee) public onlyOwner {\\r\\n        uint256 index = isEmployee(employee);\\r\\n        employees[index] = employees[employees.length - 1];\\r\\n        employees.pop();\\r\\n\\r\\n        delete coorespondingEmployeeSalary[employee];\\r\\n    }\\r\\n\\r\\n    function isEmployee(address employee) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < employees.length; i++) {\\r\\n            if (employees[i] == employee) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        revert AutomatedPayment__NotFound();\\r\\n    }\\r\\n\\r\\n    function checkUpkeep(\\r\\n        bytes memory /*checkData*/\\r\\n    )\\r\\n        public\\r\\n        view\\r\\n        override\\r\\n        returns (\\r\\n            bool upKeepNeeded,\\r\\n            bytes memory /* performData*/\\r\\n        )\\r\\n    {\\r\\n        bool timePassed = (block.timestamp - startTime) > i_interval;\\r\\n        bool enoughFunds = (address(this).balance >= getTotalSalariesAmount());\\r\\n        bool employeeExist = employees.length >= 1;\\r\\n        upKeepNeeded = (timePassed && enoughFunds && employeeExist);\\r\\n    }\\r\\n\\r\\n    function performUpkeep(\\r\\n        bytes memory /*performData*/\\r\\n    ) external override {\\r\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n        if (!upkeepNeeded) {\\r\\n            revert AutomatedPayment__CannotPerformUpkeep();\\r\\n        }\\r\\n        for (uint256 i = 0; i < employees.length; i++) {\\r\\n            employees[i].transfer(coorespondingEmployeeSalary[employees[i]]);\\r\\n        }\\r\\n        startTime = block.timestamp;\\r\\n    }\\r\\n\\r\\n    function getBalance() public view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getFunders() public view returns (address[] memory) {\\r\\n        return funders;\\r\\n    }\\r\\n\\r\\n    function getEmployees()\\r\\n        public\\r\\n        view\\r\\n        onlyOwner\\r\\n        returns (address payable[] memory)\\r\\n    {\\r\\n        return employees;\\r\\n    }\\r\\n\\r\\n    function getEmployeeSalary(address employee)\\r\\n        public\\r\\n        view\\r\\n        onlyOwner\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return coorespondingEmployeeSalary[employee];\\r\\n    }\\r\\n\\r\\n    function getTotalSalariesAmount() internal view returns (uint256) {\\r\\n        uint256 totalAmount;\\r\\n        for (uint256 i = 0; i < employees.length; i++) {\\r\\n            totalAmount += coorespondingEmployeeSalary[employees[i]];\\r\\n        }\\r\\n\\r\\n        return totalAmount;\\r\\n    }\\r\\n\\r\\n    function getInterval() public view returns (uint256) {\\r\\n        return i_interval;\\r\\n    }\\r\\n\\r\\n    modifier areEnoughFundsAvailable() {\\r\\n        uint256 totalAmount = getTotalSalariesAmount();\\r\\n        if (totalAmount > address(this).balance)\\r\\n            revert AutomatedPayment__NotEnoughFunds();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (i_owner != msg.sender) revert AutomatedPayment__OnlyOwnerAllowed();\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x310a330877f63f21d98b35c6bc4ec878a63ae61fef123c242c4e3474cb48f029\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162001a2838038062001a28833981810160405281019062000037919062000127565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505080608081815250504260008190555050506200016e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b48262000087565b9050919050565b620000c681620000a7565b8114620000d257600080fd5b50565b600081519050620000e681620000bb565b92915050565b6000819050919050565b6200010181620000ec565b81146200010d57600080fd5b50565b6000815190506200012181620000f6565b92915050565b6000806040838503121562000141576200014062000082565b5b60006200015185828601620000d5565b9250506020620001648582860162000110565b9150509250929050565b60805160a05161185c620001cc600039600081816107430152818161090101528181610acd01528181610b8a01528181610bd801528181610c520152610eeb0152600081816108550152818161087f0152610bb2015261185c6000f3fe6080604052600436106101185760003560e01c806378e97925116100a0578063dc0d3dff11610064578063dc0d3dff146103aa578063e7fd9a13146103e7578063ea63a04414610410578063ea66543f1461043b578063ec34ece81461047857610127565b806378e97925146102f4578063893d20e81461031f57806391ad27b41461034a578063b60d428814610375578063dba6335f1461037f57610127565b80636775a4c2116100e75780636775a4c2146101e85780636919207d146102255780636e04ff0d146102505780636e7c4ab11461028e5780636f5be0d6146102b757610127565b806312065fe01461012c5780634585e33b146101575780634739326b146101805780634abefa36146101bd57610127565b36610127576101256104a1565b005b600080fd5b34801561013857600080fd5b5061014161055c565b60405161014e919061107f565b60405180910390f35b34801561016357600080fd5b5061017e600480360381019061017991906111f4565b610564565b005b34801561018c57600080fd5b506101a760048036038101906101a29190611269565b6106e9565b6040516101b491906112d7565b60405180910390f35b3480156101c957600080fd5b506101d2610728565b6040516101df91906113b0565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a9190611410565b61083b565b60405161021c919061107f565b60405180910390f35b34801561023157600080fd5b5061023a610853565b604051610247919061107f565b60405180910390f35b34801561025c57600080fd5b50610277600480360381019061027291906111f4565b610877565b6040516102859291906114e0565b60405180910390f35b34801561029a57600080fd5b506102b560048036038101906102b09190611410565b6108e8565b005b3480156102c357600080fd5b506102de60048036038101906102d99190611410565b610ab2565b6040516102eb919061107f565b60405180910390f35b34801561030057600080fd5b50610309610b80565b604051610316919061107f565b60405180910390f35b34801561032b57600080fd5b50610334610b86565b604051610341919061151f565b60405180910390f35b34801561035657600080fd5b5061035f610bae565b60405161036c919061107f565b60405180910390f35b61037d6104a1565b005b34801561038b57600080fd5b50610394610bd6565b6040516103a1919061151f565b60405180910390f35b3480156103b657600080fd5b506103d160048036038101906103cc9190611269565b610bfa565b6040516103de919061151f565b60405180910390f35b3480156103f357600080fd5b5061040e60048036038101906104099190611566565b610c39565b005b34801561041c57600080fd5b50610425610d69565b6040516104329190611664565b60405180910390f35b34801561044757600080fd5b50610462600480360381019061045d9190611410565b610df7565b60405161046f919061107f565b60405180910390f35b34801561048457600080fd5b5061049f600480360381019061049a9190611686565b610ed2565b005b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055391906116f5565b92505081905550565b600047905090565b600061057e60405180602001604052806000815250610877565b509050806105b8576040517f4098bdc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106dd57600181815481106105dc576105db61174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60036000600185815481106106385761063761174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156106c9573d6000803e3d6000fd5b5080806106d59061177a565b9150506105bb565b50426000819055505050565b600181815481106106f957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60603373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146107af576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180548060200260200160405190810160405280929190818152602001828054801561083157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107e7575b5050505050905090565b60046020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000606060007f0000000000000000000000000000000000000000000000000000000000000000600054426108ac91906117c3565b11905060006108b9610fad565b4710159050600060018080549050101590508280156108d55750815b80156108de5750805b9450505050915091565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461096d576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061097882610df7565b9050600180808054905061098c91906117c3565b8154811061099d5761099c61174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106109dc576109db61174b565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001805480610a3657610a356117f7565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610b39576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60028181548110610c0a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610cbe576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60606002805480602002602001604051908101604052809291908181526020018280548015610ded57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610da3575b5050505050905090565b600080600090505b600180549050811015610e9a578273ffffffffffffffffffffffffffffffffffffffff1660018281548110610e3757610e3661174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e875780915050610ecd565b8080610e929061177a565b915050610dff565b506040517f54ed597e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610f57576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f6283610df7565b905081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b60008060005b60018054905081101561105e576003600060018381548110610fd857610fd761174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261104991906116f5565b915080806110569061177a565b915050610fb3565b508091505090565b6000819050919050565b61107981611066565b82525050565b60006020820190506110946000830184611070565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611101826110b8565b810181811067ffffffffffffffff821117156111205761111f6110c9565b5b80604052505050565b600061113361109a565b905061113f82826110f8565b919050565b600067ffffffffffffffff82111561115f5761115e6110c9565b5b611168826110b8565b9050602081019050919050565b82818337600083830152505050565b600061119761119284611144565b611129565b9050828152602081018484840111156111b3576111b26110b3565b5b6111be848285611175565b509392505050565b600082601f8301126111db576111da6110ae565b5b81356111eb848260208601611184565b91505092915050565b60006020828403121561120a576112096110a4565b5b600082013567ffffffffffffffff811115611228576112276110a9565b5b611234848285016111c6565b91505092915050565b61124681611066565b811461125157600080fd5b50565b6000813590506112638161123d565b92915050565b60006020828403121561127f5761127e6110a4565b5b600061128d84828501611254565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112c182611296565b9050919050565b6112d1816112b6565b82525050565b60006020820190506112ec60008301846112c8565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611327816112b6565b82525050565b6000611339838361131e565b60208301905092915050565b6000602082019050919050565b600061135d826112f2565b61136781856112fd565b93506113728361130e565b8060005b838110156113a357815161138a888261132d565b975061139583611345565b925050600181019050611376565b5085935050505092915050565b600060208201905081810360008301526113ca8184611352565b905092915050565b60006113dd82611296565b9050919050565b6113ed816113d2565b81146113f857600080fd5b50565b60008135905061140a816113e4565b92915050565b600060208284031215611426576114256110a4565b5b6000611434848285016113fb565b91505092915050565b60008115159050919050565b6114528161143d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611492578082015181840152602081019050611477565b838111156114a1576000848401525b50505050565b60006114b282611458565b6114bc8185611463565b93506114cc818560208601611474565b6114d5816110b8565b840191505092915050565b60006040820190506114f56000830185611449565b818103602083015261150781846114a7565b90509392505050565b611519816113d2565b82525050565b60006020820190506115346000830184611510565b92915050565b611543816112b6565b811461154e57600080fd5b50565b6000813590506115608161153a565b92915050565b6000806040838503121561157d5761157c6110a4565b5b600061158b85828601611551565b925050602061159c85828601611254565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6115db816113d2565b82525050565b60006115ed83836115d2565b60208301905092915050565b6000602082019050919050565b6000611611826115a6565b61161b81856115b1565b9350611626836115c2565b8060005b8381101561165757815161163e88826115e1565b9750611649836115f9565b92505060018101905061162a565b5085935050505092915050565b6000602082019050818103600083015261167e8184611606565b905092915050565b6000806040838503121561169d5761169c6110a4565b5b60006116ab858286016113fb565b92505060206116bc85828601611254565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061170082611066565b915061170b83611066565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117405761173f6116c6565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061178582611066565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117b8576117b76116c6565b5b600182019050919050565b60006117ce82611066565b91506117d983611066565b9250828210156117ec576117eb6116c6565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212208bd8f20940d35120fad53ca2934cab12e16ddd18a97b20aba3ca5291946792f964736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106101185760003560e01c806378e97925116100a0578063dc0d3dff11610064578063dc0d3dff146103aa578063e7fd9a13146103e7578063ea63a04414610410578063ea66543f1461043b578063ec34ece81461047857610127565b806378e97925146102f4578063893d20e81461031f57806391ad27b41461034a578063b60d428814610375578063dba6335f1461037f57610127565b80636775a4c2116100e75780636775a4c2146101e85780636919207d146102255780636e04ff0d146102505780636e7c4ab11461028e5780636f5be0d6146102b757610127565b806312065fe01461012c5780634585e33b146101575780634739326b146101805780634abefa36146101bd57610127565b36610127576101256104a1565b005b600080fd5b34801561013857600080fd5b5061014161055c565b60405161014e919061107f565b60405180910390f35b34801561016357600080fd5b5061017e600480360381019061017991906111f4565b610564565b005b34801561018c57600080fd5b506101a760048036038101906101a29190611269565b6106e9565b6040516101b491906112d7565b60405180910390f35b3480156101c957600080fd5b506101d2610728565b6040516101df91906113b0565b60405180910390f35b3480156101f457600080fd5b5061020f600480360381019061020a9190611410565b61083b565b60405161021c919061107f565b60405180910390f35b34801561023157600080fd5b5061023a610853565b604051610247919061107f565b60405180910390f35b34801561025c57600080fd5b50610277600480360381019061027291906111f4565b610877565b6040516102859291906114e0565b60405180910390f35b34801561029a57600080fd5b506102b560048036038101906102b09190611410565b6108e8565b005b3480156102c357600080fd5b506102de60048036038101906102d99190611410565b610ab2565b6040516102eb919061107f565b60405180910390f35b34801561030057600080fd5b50610309610b80565b604051610316919061107f565b60405180910390f35b34801561032b57600080fd5b50610334610b86565b604051610341919061151f565b60405180910390f35b34801561035657600080fd5b5061035f610bae565b60405161036c919061107f565b60405180910390f35b61037d6104a1565b005b34801561038b57600080fd5b50610394610bd6565b6040516103a1919061151f565b60405180910390f35b3480156103b657600080fd5b506103d160048036038101906103cc9190611269565b610bfa565b6040516103de919061151f565b60405180910390f35b3480156103f357600080fd5b5061040e60048036038101906104099190611566565b610c39565b005b34801561041c57600080fd5b50610425610d69565b6040516104329190611664565b60405180910390f35b34801561044757600080fd5b50610462600480360381019061045d9190611410565b610df7565b60405161046f919061107f565b60405180910390f35b34801561048457600080fd5b5061049f600480360381019061049a9190611686565b610ed2565b005b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055391906116f5565b92505081905550565b600047905090565b600061057e60405180602001604052806000815250610877565b509050806105b8576040517f4098bdc700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156106dd57600181815481106105dc576105db61174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60036000600185815481106106385761063761174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549081150290604051600060405180830381858888f193505050501580156106c9573d6000803e3d6000fd5b5080806106d59061177a565b9150506105bb565b50426000819055505050565b600181815481106106f957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60603373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146107af576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180548060200260200160405190810160405280929190818152602001828054801561083157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107e7575b5050505050905090565b60046020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000606060007f0000000000000000000000000000000000000000000000000000000000000000600054426108ac91906117c3565b11905060006108b9610fad565b4710159050600060018080549050101590508280156108d55750815b80156108de5750805b9450505050915091565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff161461096d576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061097882610df7565b9050600180808054905061098c91906117c3565b8154811061099d5761099c61174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600182815481106109dc576109db61174b565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001805480610a3657610a356117f7565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090555050565b60003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610b39576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60005481565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60028181548110610c0a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610cbe576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60606002805480602002602001604051908101604052809291908181526020018280548015610ded57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610da3575b5050505050905090565b600080600090505b600180549050811015610e9a578273ffffffffffffffffffffffffffffffffffffffff1660018281548110610e3757610e3661174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e875780915050610ecd565b8080610e929061177a565b915050610dff565b506040517f54ed597e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610f57576040517f6cdf338d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f6283610df7565b905081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b60008060005b60018054905081101561105e576003600060018381548110610fd857610fd761174b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261104991906116f5565b915080806110569061177a565b915050610fb3565b508091505090565b6000819050919050565b61107981611066565b82525050565b60006020820190506110946000830184611070565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611101826110b8565b810181811067ffffffffffffffff821117156111205761111f6110c9565b5b80604052505050565b600061113361109a565b905061113f82826110f8565b919050565b600067ffffffffffffffff82111561115f5761115e6110c9565b5b611168826110b8565b9050602081019050919050565b82818337600083830152505050565b600061119761119284611144565b611129565b9050828152602081018484840111156111b3576111b26110b3565b5b6111be848285611175565b509392505050565b600082601f8301126111db576111da6110ae565b5b81356111eb848260208601611184565b91505092915050565b60006020828403121561120a576112096110a4565b5b600082013567ffffffffffffffff811115611228576112276110a9565b5b611234848285016111c6565b91505092915050565b61124681611066565b811461125157600080fd5b50565b6000813590506112638161123d565b92915050565b60006020828403121561127f5761127e6110a4565b5b600061128d84828501611254565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112c182611296565b9050919050565b6112d1816112b6565b82525050565b60006020820190506112ec60008301846112c8565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611327816112b6565b82525050565b6000611339838361131e565b60208301905092915050565b6000602082019050919050565b600061135d826112f2565b61136781856112fd565b93506113728361130e565b8060005b838110156113a357815161138a888261132d565b975061139583611345565b925050600181019050611376565b5085935050505092915050565b600060208201905081810360008301526113ca8184611352565b905092915050565b60006113dd82611296565b9050919050565b6113ed816113d2565b81146113f857600080fd5b50565b60008135905061140a816113e4565b92915050565b600060208284031215611426576114256110a4565b5b6000611434848285016113fb565b91505092915050565b60008115159050919050565b6114528161143d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611492578082015181840152602081019050611477565b838111156114a1576000848401525b50505050565b60006114b282611458565b6114bc8185611463565b93506114cc818560208601611474565b6114d5816110b8565b840191505092915050565b60006040820190506114f56000830185611449565b818103602083015261150781846114a7565b90509392505050565b611519816113d2565b82525050565b60006020820190506115346000830184611510565b92915050565b611543816112b6565b811461154e57600080fd5b50565b6000813590506115608161153a565b92915050565b6000806040838503121561157d5761157c6110a4565b5b600061158b85828601611551565b925050602061159c85828601611254565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6115db816113d2565b82525050565b60006115ed83836115d2565b60208301905092915050565b6000602082019050919050565b6000611611826115a6565b61161b81856115b1565b9350611626836115c2565b8060005b8381101561165757815161163e88826115e1565b9750611649836115f9565b92505060018101905061162a565b5085935050505092915050565b6000602082019050818103600083015261167e8184611606565b905092915050565b6000806040838503121561169d5761169c6110a4565b5b60006116ab858286016113fb565b92505060206116bc85828601611254565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061170082611066565b915061170b83611066565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117405761173f6116c6565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061178582611066565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117b8576117b76116c6565b5b600182019050919050565b60006117ce82611066565b91506117d983611066565b9250828210156117ec576117eb6116c6565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212208bd8f20940d35120fad53ca2934cab12e16ddd18a97b20aba3ca5291946792f964736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 37,
        "contract": "contracts/SplitPayment.sol:AutomatedPayment",
        "label": "startTime",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 42,
        "contract": "contracts/SplitPayment.sol:AutomatedPayment",
        "label": "employees",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address_payable)dyn_storage"
      },
      {
        "astId": 45,
        "contract": "contracts/SplitPayment.sol:AutomatedPayment",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 49,
        "contract": "contracts/SplitPayment.sol:AutomatedPayment",
        "label": "coorespondingEmployeeSalary",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 53,
        "contract": "contracts/SplitPayment.sol:AutomatedPayment",
        "label": "coorespondingFunderAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_address_payable)dyn_storage": {
        "base": "t_address_payable",
        "encoding": "dynamic_array",
        "label": "address payable[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}